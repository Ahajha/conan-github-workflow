name: Conan build
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_call:

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false

      matrix:
        include:
          - os: ubuntu-latest
            compiler: gcc
            compiler_version: 10
            build_type: Release
          - os: ubuntu-latest
            compiler: clang
            compiler_version: 16
            build_type: Release
          - os: windows-latest
            compiler: msvc
            compiler_version: 193
            build_type: Release
          - os: ubuntu-latest
            compiler: gcc
            compiler_version: 10
            build_type: Debug
          - os: ubuntu-latest
            compiler: clang
            compiler_version: 16
            build_type: Debug
          - os: windows-latest
            compiler: msvc
            compiler_version: 193
            build_type: Debug

    steps:
    - uses: actions/checkout@v3

    - name: Set reusable strings
      # Turn repeated input strings (such as the build output directory) into step outputs. These step outputs can be used throughout the workflow file.
      id: strings
      shell: bash
      run: |
        BUILD_TYPE=${{ matrix.build_type }}
        if [ ${{ matrix.os }} == "windows-latest" ]
        then
            echo "conan-configure-preset=conan-default" >> "$GITHUB_OUTPUT"
        else
            echo "conan-configure-preset=conan-${BUILD_TYPE@L}" >> "$GITHUB_OUTPUT"
        fi
        echo "conan-build-preset=conan-${BUILD_TYPE@L}" >> "$GITHUB_OUTPUT"

    - name: Install Conan
      run: pip install conan
    
    - name: Install Conan profile
      run: |
        conan config install ${{ github.server_url }}/${{ github.workflow_ref }}
        cp "$(conan config home)/profiles/${{ matrix.compiler }}" "$(conan config home)/profiles/${{ matrix.compiler }}-${{ matrix.compiler_version }}"

    - name: Install Conan dependencies
      run: conan install . -pr ${{ matrix.compiler }}-${{ matrix.compiler_version }} -s build_type=${{ matrix.build_type }} -s compiler.cppstd=20
    
    - name: Configure CMake
      run: cmake --preset ${{ steps.strings.outputs.conan-configure-preset }}

    - name: Build
      run: cmake --build --preset ${{ steps.strings.outputs.conan-build-preset }}

    - name: Test
      run: ctest --preset ${{ steps.strings.outputs.conan-build-preset }}
